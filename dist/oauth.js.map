{"mappings":"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","sources":["node_modules/@swc/helpers/src/_type_of.mjs","node_modules/localforage/dist/localforage.js","node_modules/uid/dist/index.mjs","application/oauth.js"],"sourcesContent":["export default function _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","var IDX=256, HEX=[], SIZE=256, BUFFER;\nwhile (IDX--) HEX[IDX] = (IDX + 256).toString(16).substring(1);\n\nexport function uid(len) {\n\tvar i=0, tmp=(len || 11);\n\tif (!BUFFER || ((IDX + tmp) > SIZE*2)) {\n\t\tfor (BUFFER='',IDX=0; i < SIZE; i++) {\n\t\t\tBUFFER += HEX[Math.random() * 256 | 0];\n\t\t}\n\t}\n\n\treturn BUFFER.substring(IDX, IDX++ + tmp);\n}\n","\"use strict\";\n\nimport localforage from \"localforage\";\nimport { uid } from \"uid\";\n\nlocalforage.setDriver(localforage.LOCALSTORAGE);\n\nconst google_cred = {\n  clientId:\n    \"762086220505-f0kij4nt279nqn21ukokm06j0jge2ngl.apps.googleusercontent.com\",\n  clientSecret: \"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\",\n  redirect_ur:\"https://greg.strukturart.com/redirect.html\",\n};\nlet authorizationCode = \"\";\n\nlet get_token = function () {\n  let code = window.location.href;\n  let r = code.split(\"&code=\");\n  let b = r[1].split(\"&\");\n\n  localStorage.setItem(\"authorizationCode\", b[0]);\n  authorizationCode = b[0];\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n  var urlencoded = new URLSearchParams();\n  urlencoded.append(\"code\", b[0]);\n  urlencoded.append(\"grant_type\", \"authorization_code\");\n  urlencoded.append(\n    \"redirect_uri\",\n    \"https://greg.strukturart.com/redirect.html\"\n  );\n  urlencoded.append(\"client_id\", google_cred.clientId);\n  urlencoded.append(\"client_secret\", google_cred.clientSecret);\n\n  var requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: urlencoded,\n    redirect: \"follow\",\n  };\n\n  return fetch(\"https://oauth2.googleapis.com/token\", requestOptions).then(\n    (response) => response.json()\n  );\n};\n\nget_token().then((result) => {\n  // console.log(result);\n\n  localStorage.setItem(\"oauth_auth\", JSON.stringify(result));\n  let accounts = [];\n\n  localforage\n    .getItem(\"accounts\")\n    .then(function (value) {\n      if (value == null) {\n        accounts = [];\n        return false;\n      }\n      accounts = value;\n\n      accounts.push({\n        server_url: \"https://apidata.googleusercontent.com/caldav/v2/\",\n        tokens: result,\n        authorizationCode: authorizationCode,\n        name: \"Google\",\n        id: uid(32),\n        type: \"oauth\",\n      });\n\n      localforage\n        .setItem(\"accounts\", accounts)\n        .then(function () {\n          document.getElementById(\"success\").innerText =\n            \"Account successfully added to greg\";\n          setTimeout(function () {\n            window.close();\n          }, 1000);\n        })\n        .catch(function (err) {\n          // This code runs if there were any errors\n          console.log(err);\n        });\n    })\n    .catch(function (err) {\n      console.log(err);\n    });\n});\n"],"names":["$ebb746962eb0fef7$export$2e2bcd8739ae039","obj","constructor","Symbol","$091687da12bb8bf4$exports","e1","t","n","r","s","o","u","a","undefined","i","f","Error","code","l","exports","call","e","_$n","o1","length","_dereq_","module","global","scheduleDrain","draining","nextTick","oldQueue","len","queue","immediate","task","push","Mutation","MutationObserver","WebKitMutationObserver","called","observer","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","this","$parcel$global","self","window","INTERNAL","Promise","resolver","TypeError","state","PENDING","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","value","returnValue","handlers","reject","resolve","getThen","then","apply","arguments","thenable","onError","onSuccess","tryToUnwrap","result","tryCatch","status","out","reason","all","iterable","Object","prototype","toString","values","Array","resolved","i1","allResolver","resolveFromAll","outValue","error","race","response","REJECTED","FULFILLED","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","isIndexedDBValid","idb1","open","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","indexOf","IDBKeyRange","createBlob","parts","properties","Blob","name","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","idb","Promise$1","txn","transaction","DETECT_BLOB_SUPPORT_STORE","READ_WRITE","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","supportsBlobs","_deferReadiness","dbInfo","dbContext","dbContexts","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","db","close","dbArgs","version","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","onversionchange","target","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","arrayBuff","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","i2","forage","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","getItem","createTransaction","READ_ONLY","req","get","iterate","iterator","openCursor","iterationNumber","cursor","setItem","value1","blobSupport","store","_$err","removeItem","clear","length1","count","key1","advanced","openKeyCursor","advance","keys1","keys","dropInstance","currentConfig","config","dbPromise","db2","deleteObjectStore","_$db","_forage2","db1","i3","deleteDatabase","onblocked","_forage","isWebSQLValid","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","BASE_CHARS","bufferToString","base64String","substring","serialize","valueType","toString$1","marker","SERIALIZED_MARKER","TYPE_ARRAYBUFFER","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_UINT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","fileReader","onload","str","BLOB_TYPE_PREFIX","TYPE_BLOB","readAsArrayBuffer","JSON","stringify","deserialize","SERIALIZED_MARKER_LENGTH","parse","blobType","TYPE_SERIALIZED_MARKER_LENGTH","BLOB_TYPE_PREFIX_REGEX","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","localforageSerializer","tryExecuteSql","t1","sqlStatement","args","t2","SYNTAX_ERR","results","rows","getItem$1","item","iterate$1","setItem$1","_setItem","removeItem$1","clear$1","length$1","c","key$1","keys$1","getAllStoreNames","storeNames","sqlError","dropInstance$1","operationInfo","resolve1","reject1","dropTable","operations","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","value2","originalValue","dropInstance$2","callWhenReady","localForageInstance","libraryMethod","_args","extend","arg","_key","hasOwnProperty","isArray","_typeof","mode","retries","tx","asyncStorage","_driver","_support","value3","retriesLeft","error1","QUOTA_ERR","webSQLStorage","localStorageWrapper","sameValue","x","y","isNaN","includes","array","searchElement","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","LocalForage1","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","promise1","complianceError","driverMethods","driverMethodName","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","supportedDrivers","currentDriverIndex","driverPromiseLoop","supportedDrivers1","_getSupportedDrivers","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js","$7ef67c1ba3637699$var$BUFFER","$7ef67c1ba3637699$var$IDX","$7ef67c1ba3637699$var$HEX","$7ef67c1ba3637699$export$e2a22331486dcca0","tmp","$7ef67c1ba3637699$var$SIZE","Math","random","localforage","google_cred","authorizationCode","b","location","href","split","myHeaders","Headers","urlencoded","URLSearchParams","method","headers","body","redirect","json","get_token","accounts","server_url","tokens","id","uid","getElementById","innerText","catch","log"],"version":3,"file":"oauth.js.map"}